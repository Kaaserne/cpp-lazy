name: Continuous Integration

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch: ~

  schedule:
    - cron: '0 8 * * 1'

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  DOCTEST_VERSION: '2.4.12'

jobs:
  gcc:
    strategy:
      fail-fast: false
      matrix:
        version: [11, 13]
        standard: [11, 14, 17, 20, 23]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install GCC ${{ matrix.version }}
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt-get install -y gcc-${{ matrix.version }} g++-${{ matrix.version }}

      - name: Configure (install)
        env:
          CC: gcc-${{ matrix.version }}
          CXX: g++-${{ matrix.version }}
        run: cmake -S . -B build/install -G Ninja
          -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}
          -D CMAKE_BUILD_TYPE:STRING=Release
          -D CMAKE_INSTALL_PREFIX=build/prefix
          -D "CMAKE_PROJECT_FMT_INCLUDE_BEFORE=$(pwd)/cmake/fmtPICFix.cmake"

      - name: Build (install)
        run: cmake --build build/install -j $(nproc)

      - name: Install
        run: cmake --install build/install

      - name: Configure tests
        run: cmake -S tests -B build/tests -G Ninja
          -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          -D CMAKE_BUILD_TYPE:STRING=Release
          -D CPP-LAZY_DOCTEST_VERSION:STRING=${{ env.DOCTEST_VERSION }}
          -D TEST_INSTALLED_VERSION:BOOL=YES
          -D CMAKE_INSTALL_PREFIX=build/prefix
          -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}

      - name: Build tests
        run: cmake --build build/tests -j $(nproc)

      - name: Run tests
        working-directory: build/tests
        run: ctest --output-on-failure -VV -j $(nproc)

  clang:
    strategy:
      fail-fast: false
      matrix:
        version: [17]
        standard: [11, 14, 17, 20, 23]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
    
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install Clang ${{ matrix.version }}
        run: sudo apt-get install -y clang-${{ matrix.version }}
      
      - name: Install libc++ Clang ${{ matrix.version }}
        if: matrix.standard == '20'
        run: sudo apt-get install -y libc++-${{ matrix.version }}-dev libc++abi-${{ matrix.version }}-dev

      - name: Configure (install)
        env:
          CC: clang-${{ matrix.version }}
          CXX: clang-${{ matrix.version }}
        run: |
          if [ "${{ matrix.standard }}" = "20" ]; then
            CXX_FLAGS='-stdlib=libc++'
          else
            CXX_FLAGS=''
          fi
          cmake -S . -B build/install -G Ninja \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }} \
            -D CMAKE_CXX_FLAGS=$CXX_FLAGS \
            -D CMAKE_BUILD_TYPE:STRING=Release \
            -D CMAKE_INSTALL_PREFIX=build/prefix \
            -D CMAKE_CXX_COMPILER=clang++ \
            -D "CMAKE_PROJECT_FMT_INCLUDE_BEFORE=$(pwd)/cmake/fmtPICFix.cmake"

      - name: Build (install)
        run: cmake --build build/install -j $(nproc)

      - name: Install
        run: cmake --install build/install

      - name: Configure tests
        run: |
          if [ "${{ matrix.standard }}" == "20" ]; then
            CXX_FLAGS="-stdlib=libc++"
          else
            CXX_FLAGS=""
          fi
          cmake -S tests -B build/tests -G Ninja \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D CMAKE_BUILD_TYPE:STRING=Release \
            -D "CMAKE_CXX_FLAGS=$CXX_FLAGS" \
            -D CPP-LAZY_DOCTEST_VERSION:STRING=${{ env.DOCTEST_VERSION }} \
            -D TEST_INSTALLED_VERSION:BOOL=YES \
            -D CMAKE_CXX_COMPILER=clang++ \
            -D CMAKE_INSTALL_PREFIX=build/prefix \
            -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}

      - name: Build tests
        run: cmake --build build/tests -j $(nproc)

      - name: Run tests
        working-directory: build/tests
        run: ctest -VV --output-on-failure -j $(nproc)

  msvc:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, windows-2025 ]
        standard: [11, 14, 17, 20, 23]

    runs-on: ${{ matrix.os }}

    steps:
      # Using Ninja causes the test to fail on Github Actions
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Run sccache-cache
        uses: mozilla/sccache-action@main
        with:
          version: "v0.8.1"

      - name: Configure (install)
        run: cmake -S . -B build/install
          -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
          -D CMAKE_BUILD_TYPE:STRING=Release
          -D CMAKE_INSTALL_PREFIX=build/prefix
          -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}
          -D CMAKE_C_COMPILER:STRING=cl.exe
          -D CMAKE_CXX_COMPILER:STRING=cl.exe

      - name: Build (install)
        run: cmake --build build/install --config Release -j $env:NUMBER_OF_PROCESSORS

      - name: Install
        run: cmake --install build/install --config Release

      - name: Configure tests
        run: cmake -S tests -B build/tests -G Ninja
          -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
          -D CPP-LAZY_DOCTEST_VERSION:STRING=${{ env.DOCTEST_VERSION }}
          -D TEST_INSTALLED_VERSION:BOOL=YES
          -D CMAKE_INSTALL_PREFIX=build/prefix
          -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}
          -D CMAKE_C_COMPILER:STRING=cl.exe
          -D CMAKE_CXX_COMPILER:STRING=cl.exe

      - name: Build tests
        run: cmake --build build/tests --config Release -j $env:NUMBER_OF_PROCESSORS

      - name: Run tests
        working-directory: build/tests
        run: ctest -C Release --output-on-failure -VV -j $(nproc)

  examples:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Configure
        run: cmake -S examples -B build/examples -G Ninja
          -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          -D CMAKE_BUILD_TYPE:STRING=Release

      - name: Build
        run: cmake --build build/examples -j $(nproc)
  
  module_tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      
      - name: Add LLVM apt repo and install Clang 18
        run: |
          sudo apt-get update
          sudo apt-get install -y wget lsb-release gnupg
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          clang++-18 --version

      - name: Configure tests
        env:
          CC: clang-18
          CXX: clang++-18
        run: cmake -S tests/module_tests -B tests/module_tests/build -G Ninja
          -D CMAKE_CXX_STANDARD:STRING=20
          -D CPP-LAZY_USE_MODULES=ON
          -D CMAKE_CXX_COMPILER=clang++-18
          -D CMAKE_C_COMPILER=clang-18

      - name: Build
        run: cmake --build tests/module_tests/build
      
      - name: Run tests
        working-directory: tests/module_tests/build
        run: ./module_test
