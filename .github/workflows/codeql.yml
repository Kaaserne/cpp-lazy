name: "CodeQL"

on:
  push:
    branches: [ "master", dev ]
  pull_request:
    branches: [ "master" ]

env:
  CATCH_VERSION: '2.13.10'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        standard: [ '11', '20' ]
        version: [ '11' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Install ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install GCC ${{ matrix.version }}
      run: sudo apt-get install -y gcc-${{ matrix.version }} g++-${{ matrix.version }}

    - name: Configure (install)
      env:
        CC: gcc-${{ matrix.version }}
        CXX: g++-${{ matrix.version }}
      run: cmake -S . -B build/install -G Ninja
        -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
        -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}
        -D CMAKE_BUILD_TYPE:STRING=Release
        -D CMAKE_INSTALL_PREFIX=build/prefix
        -D "CMAKE_PROJECT_FMT_INCLUDE_BEFORE=$(pwd)/cmake/fmtPICFix.cmake"

    - name: Build (install)
      run: cmake --build build/install -j $(nproc)

    - name: Install
      run: cmake --install build/install

    - name: Configure tests
      run: cmake -S tests -B build/tests -G Ninja
        -D CMAKE_BUILD_TYPE:STRING=Release
        -D CPP-LAZY_CATCH_VERSION:STRING=${{ env.CATCH_VERSION }}
        -D CPP-LAZY_DEBUG_ASSERTIONS:BOOL=ON
        -D TEST_INSTALLED_VERSION:BOOL=YES
        -D CMAKE_INSTALL_PREFIX=build/prefix
        -D CMAKE_CXX_STANDARD:STRING=${{ matrix.standard }}

    - name: Build tests
      run: cmake --build build/tests -j $(nproc)

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
